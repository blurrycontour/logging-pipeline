[PARSER]
    Name    python-logging-singleline-1
    Format  regex
    Regex   ^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{6}):(?<file>[^:]+):(?<type>[^:]+):(?<msg>.+)$

[PARSER]
    Name    python-logging-singleline-2
    Format  regex
    Regex   \[(\d{2}:\d{2}:\d{2})\]:(?<file>.*?):(?<type>[^:]+):(?<msg>.+)$

[PARSER]
    Name    python-logging-multiline-1
    Format  regex
    Regex   ^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{6}):(?<file>[^:]+):(?<type>[^:]+):(?<msg>.+)\n(?<extra>(.|\n)*)

[PARSER]
    Name    python-logging-multiline-2
    Format  regex
    Regex   \[(\d{2}:\d{2}:\d{2})\]:(?<file>.*?):(?<type>[^:]+):(?<msg>.+)\n(?<extra>(.|\n)*)

[PARSER]
    Name    python-uncaught
    Format  regex
    Regex   ^(?<type>Traceback) (?<msg>.+)$

[PARSER]
    Name    extract-id
    Format  regex
    Regex   ^.*\/build_(?<id>\d+)\.log$
    Types   id:integer

[MULTILINE_PARSER]
    name          multiline-input-parser
    type          regex
    flush_timeout 2000
    rule    "start_state"     "/^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{6}):([^:]+):([^:]+):(.+)$|^\[(\d{2}:\d{2}:\d{2})\]:([^:]+):([^:]+):(.+)$/"      "cont"
    rule    "cont"      "/^Traceback .+$|^\s.+$|^[a-zA-Z._]+: .+$|^During handling of the above exception.*$/"      "cont"
